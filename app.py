import streamlit as st
import torch
from torchvision import transforms
from PIL import Image
import os

<<<<<<< HEAD

=======
# –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏
>>>>>>> c72102b (Git LFS model)
model_path = "/home/eraly/projects/Skin-ai/skin_disease_model_jit.pt"
if not os.path.exists(model_path):
    st.error(f"–ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {model_path}")
    st.stop()

model = torch.jit.load(model_path, map_location=torch.device('cpu'))
model.eval()

<<<<<<< HEAD

=======
# –ó–∞–≥—Ä—É–∑–∫–∞ –º–µ—Ç–æ–∫
>>>>>>> c72102b (Git LFS model)
if not os.path.exists("/home/eraly/projects/Skin-ai/labels.txt"):
    st.error("–§–∞–π–ª –º–µ—Ç–æ–∫ (labels.txt) –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    st.stop()

with open("/home/eraly/projects/Skin-ai/labels.txt", "r") as f:
    labels = [line.strip() for line in f.readlines()]

<<<<<<< HEAD

=======
# –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–±–µ–∑ RandomHorizontalFlip, —Ç.–∫. –¥–ª—è –∏–Ω—Ñ–µ—Ä–µ–Ω—Å–∞ –Ω—É–∂–Ω–∞ –¥–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å)
>>>>>>> c72102b (Git LFS model)
preprocess = transforms.Compose([
    transforms.Resize((224, 224)),
    transforms.ToTensor(),
    transforms.Normalize(mean=[0.485, 0.456, 0.406],
                         std=[0.229, 0.224, 0.225]),
])

<<<<<<< HEAD

=======
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
>>>>>>> c72102b (Git LFS model)
st.set_page_config(
    page_title="–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–æ–∂–Ω—ã—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π",
    page_icon="ü©∫",
    layout="centered",
    initial_sidebar_state="collapsed"
)

<<<<<<< HEAD

=======
# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å—Ç–∏–ª–µ–π –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–∏–∑—É–∞–ª–∞
>>>>>>> c72102b (Git LFS model)
st.markdown("""
    <style>
        .stApp {
            background-color: #f0f2f6;
            padding: 20px;
            border-radius: 10px;
        }
        h1 {
            color: #2c3e50;
            text-align: center;
        }
        .stFileUploader > div > div {
            background-color: #ecf0f1;
            border-radius: 10px;
        }
        .css-1d391kg {
            background-color: #ffffff;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
    </style>
""", unsafe_allow_html=True)

<<<<<<< HEAD

st.title("ü©∫ –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–æ–∂–Ω—ã—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π")
st.markdown("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–∂–∏, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ.")


uploaded_file = st.file_uploader("–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    image = Image.open(uploaded_file)
    st.image(image, caption="–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", use_column_width=True)

=======
# –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.title("ü©∫ –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–æ–∂–Ω—ã—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π")
st.markdown("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–∂–∏, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ.")

# –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏–∑ –≥–∞–ª–µ—Ä–µ–∏)
uploaded_file = st.file_uploader("–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    image = Image.open(uploaded_file)
    st.image(image, caption="–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", use_column_width=True)

    # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä (–¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏)
>>>>>>> c72102b (Git LFS model)
    progress_bar = st.progress(0)
    for i in range(100):
        progress_bar.progress(i + 1)

    try:
<<<<<<< HEAD
        
        image_tensor = preprocess(image).unsqueeze(0)
        with torch.no_grad():
            output = model(image_tensor)
        
=======
        # –ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –∏–Ω—Ñ–µ—Ä–µ–Ω—Å
        image_tensor = preprocess(image).unsqueeze(0)
        with torch.no_grad():
            output = model(image_tensor)
        # –ï—Å–ª–∏ –º–æ–¥–µ–ª—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–Ω–∑–æ—Ä, –æ–±—Ä–∞—â–∞–µ–º—Å—è –∫ –ø–µ—Ä–≤–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
>>>>>>> c72102b (Git LFS model)
        scores = torch.nn.functional.softmax(output[0], dim=0)
        max_score_index = torch.argmax(scores).item()
        predicted_class = labels[max_score_index]
        confidence = scores[max_score_index].item()

<<<<<<< HEAD
        
=======
        # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
>>>>>>> c72102b (Git LFS model)
        st.markdown(f"""
            ### –†–µ–∑—É–ª—å—Ç–∞—Ç:
            - **–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å:** {predicted_class}
            - **–î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å:** {confidence:.2f}
        """)
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏: {e}")
else:
    st.info("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.")
<<<<<<< HEAD
=======

>>>>>>> c72102b (Git LFS model)
